/* Create By Pioupia https://github.com/pioupia/auto-input-a2f/ | MIT License */
class AutoInput{#t;#e;#a;#i;#n;#o;#s;#r;#l;#h;#c;#u;constructor(t={}){this.#t=t.autoEnd??!0,this.#e=t.selectAuto??!0,this.#a=t.canPast??!0,this.#i=t.createAuto??!1,this.#n=t.buttonCallback??!1,this.#o=t.beforeFire??400,this.#s=t.parent||document.getElementById("a2fParent")||document.querySelector("[data-parent-a2f]"),this.#r=t.validate||document.querySelector("[data-button-validate]"),this.#l=t.onCreate,this.#h=null,this.#d()}#b(){for(let t=0;t<6;t++){let e=document.createElement("input");if(e.setAttribute("data-a2f",""),e.setAttribute("type","text"),e.setAttribute("placeholder","0"),e.setAttribute("required",""),this.#l instanceof Function&&(e=this.#l(e,t)||e),3===t){let e=document.createElement("span");e.textContent="-",this.#l instanceof Function&&(e=this.#l(e,t),e&&this.#s.appendChild(e))}this.#s.appendChild(e)}}#d(){if(this.#i&&!this.#s)throw new Error("The parent does not exist. Please fill the parent option, or create an element with the a2fParent id or the data-parent-a2f attribute.");if(this.#i&&this.#b(),this.#h=(this.#s||document).querySelectorAll("[data-a2f]"),!(this.#h.length<2)){this.#e&&this.#h[0].focus();for(let t=0;t<this.#h.length;t++){const e=this.#h[t];e.onpaste=t=>this.#f(t),e.onkeydown=t=>this.#p(t)}if(this.#n&&!this.#r)throw new Error("The button does not exist. Please fill the validate option, or create an element with the data-button-validate attribute.");this.#n&&(this.#r.onclick=()=>{const t=this.getCode();t.length===this.#h.length&&this.#u(t)})}}#g(){for(const t of this.#h.values())if(!t.value)return this.#c=0,!1;this.#c=Date.now(),setTimeout((()=>{if(!(this.#c&&this.#c+this.#o>Date.now())&&this.#t){if(this.#u instanceof Function)return this.#u(this.getCode());this.#r?.click()}}),this.#o)}#p(t){const{key:e,target:a}=t;switch("v"===e&&(t.ctrlKey||t.metaKey)||t.preventDefault(),this.#c=0,e){case"Backspace":case"Delete":a.value="";case"ArrowLeft":let t=a.previousElementSibling;"SPAN"===t?.tagName&&(t=t.previousElementSibling),t?.focus();break;case"ArrowRight":let i=a.nextElementSibling;"SPAN"===i?.tagName&&(i=i.nextElementSibling),i?.focus();break;case"ArrowUp":this.#h.item(this.#h.length-1).focus();break;case"ArrowDown":this.#h[0].focus();break;default:if(isNaN(e))return;a.value=e,this.#p({key:"ArrowRight",target:a,preventDefault:()=>null}),this.#g()}}#f(t){if(!this.#a)return;t.stopPropagation(),t.preventDefault();const e=t.clipboardData||window.clipboardData;if(!e)return;const a=e.getData("Text"),i=a.length>this.#h.length?this.#h.length:a.length;for(let t=0;t<i;t++)isNaN(a[t])||(this.#h[t].value=a[t]);this.#g()}onValidate(t){this.#u=t}getCode(){let t="";return this.#h.forEach((e=>{t+=e.value})),t}removeEntries(){this.#h.forEach((t=>{t.value=""}))}stopAutoEnd(){this.#t=!1}startAutoEnd(){this.#t=!0}toggleAutoEnd(){this.#t=!this.#t}}export{AutoInput};